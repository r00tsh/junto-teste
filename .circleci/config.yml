version: 2.1
orbs:
  node: circleci/node@5
  terraform: circleci/terraform@3.2.1
jobs:
  lint-dockerfile:
    docker:
      - image: alpine
    steps:
      - checkout
      - run:
          name: Dockerfile Lint
          environment:
            HADOLINT_VERSION: v2.12.0
          command: |
            apk add --no-cache curl
            curl -L https://github.com/hadolint/hadolint/releases/download/$HADOLINT_VERSION/hadolint-Linux-x86_64 --output /usr/local/bin/hadolint
            chmod +x /usr/local/bin/hadolint
            hadolint Dockerfile
    
  test-node:
    executor: node/default
    working_directory: ~/project/app
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Run tests
          command: npm test --passWithNoTests

  build-push:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          version: default
      - checkout
      - run:
          name: setup Qemu
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build
      - run: |
          export GIT_REPO_NAME=$(basename $(git remote get-url origin) | cut -f1 -d'.')
          export GIT_CURRENT_VERSION=$(git rev-parse --short HEAD)
          echo "export GIT_CURRENT_VERSION=$GIT_CURRENT_VERSION" >> $BASH_ENV
          # echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          # DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --push --tag $REPO/$GIT_REPO_NAME:$GIT_CURRENT_VERSION --platform $ARCH .
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
    environment:
      ARCH: "linux/amd64"
      REPO: rootsh

  deploy:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:1.5.7
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cat bash.env
          cat bash.env >> $BASH_ENV
      - run:
          name: Terraform 
          command: |
            ls $BASH_ENV
            cat $BASH_ENV
            echo $GIT_CURRENT_VERSION
            # cd /tmp/project/terraform
            # apk add ansible --no-cache
            # terraform init
            # terraform validate
            # TF_VAR_app_version=$GIT_CURRENT_VERSION terraform plan
            # TF_VAR_app_version=$GIT_CURRENT_VERSION terraform apply -auto-approve


workflows:
  # lint-test:
  #   jobs:
  #     - lint-dockerfile:
  #         filters:
  #           branches:
  #             ignore:
  #             - main
  #     - test-node:
  #         filters:
  #           branches:
  #             ignore:
  #               - main

  build-deploy:
      jobs:
       - build-push:
          context: docker_hub
          filters:
            branches:
              ignore:
                - main
       - deploy:
          context: aws
          requires:
            - build-push
          filters:
            branches:
              ignore:
                - main